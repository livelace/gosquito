syntax = "proto3";

package webchela;
option go_package = ".;webchela";

service Server {
  rpc GetLoad(Empty) returns (Load) {}
  rpc RunTask(Task) returns (stream Chunk) {}
}

message Chunk {
  bytes chunk = 1;
  bool  end = 2;
}

message Empty {}

message Load {
  int32 cpu_load = 1;
  int64 mem_free = 2;
  int32 score = 3;
}

message Result {
  string UUID = 1;

  string page_url = 2;
  string page_title = 3;
  string page_body = 4;

  repeated string screenshots = 5;
  repeated int32 screenshots_id = 6;

  repeated string scripts = 7;
  repeated int32 scripts_id = 8;

  string url = 9;

  int32 status_code = 10;

  string content_type = 11;
}

message Task {
  string client_id = 1;

  repeated string urls = 2;
  repeated string cookies = 3;
  repeated string screenshots = 4;
  repeated string scripts = 5;

  int64 chunk_size = 6;
  int32 cpu_load = 7;
  int64 mem_free = 8;
  int64 page_size = 9;
  int32 page_timeout = 10;
  repeated int32 retry_codes = 11;
  int32 retry_codes_tries = 12;
  int32 screenshot_timeout = 13;
  int32 script_timeout = 14;
  int32 timeout = 15;
  string tab_open_randomize = 16;

  Browser browser = 17;
  Debug debug = 18;

  message Browser {
    string type = 1;
    repeated string argument = 2;
    repeated string extension = 3;
    string geometry = 4;
    int32 instance = 5;
    int32 instance_tab = 6;
    string proxy = 7;
  }

  message Debug {
    int32 pre_close_delay = 1;
    int32 pre_cookie_delay = 2;
    int32 pre_open_delay = 3;
    int32 pre_process_delay = 4;
    int32 pre_screenshot_delay = 5;
    int32 pre_script_delay = 6;
    int32 pre_wait_delay = 7;
  }
}

