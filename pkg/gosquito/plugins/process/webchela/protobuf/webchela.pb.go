// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: webchela.proto

package webchela

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	End   bool   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{0}
}

func (x *Chunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *Chunk) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{1}
}

type Load struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuLoad int32 `protobuf:"varint,1,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	MemFree int64 `protobuf:"varint,2,opt,name=mem_free,json=memFree,proto3" json:"mem_free,omitempty"`
	Score   int32 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Load) Reset() {
	*x = Load{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Load) ProtoMessage() {}

func (x *Load) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Load.ProtoReflect.Descriptor instead.
func (*Load) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{2}
}

func (x *Load) GetCpuLoad() int32 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *Load) GetMemFree() int64 {
	if x != nil {
		return x.MemFree
	}
	return 0
}

func (x *Load) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID          string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	PageUrl       string   `protobuf:"bytes,2,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageTitle     string   `protobuf:"bytes,3,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	PageBody      string   `protobuf:"bytes,4,opt,name=page_body,json=pageBody,proto3" json:"page_body,omitempty"`
	Screenshots   []string `protobuf:"bytes,5,rep,name=screenshots,proto3" json:"screenshots,omitempty"`
	ScreenshotsId []int32  `protobuf:"varint,6,rep,packed,name=screenshots_id,json=screenshotsId,proto3" json:"screenshots_id,omitempty"`
	Scripts       []string `protobuf:"bytes,7,rep,name=scripts,proto3" json:"scripts,omitempty"`
	ScriptsId     []int32  `protobuf:"varint,8,rep,packed,name=scripts_id,json=scriptsId,proto3" json:"scripts_id,omitempty"`
	Url           string   `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	StatusCode    int32    `protobuf:"varint,10,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	ContentType   string   `protobuf:"bytes,11,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Result) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *Result) GetPageTitle() string {
	if x != nil {
		return x.PageTitle
	}
	return ""
}

func (x *Result) GetPageBody() string {
	if x != nil {
		return x.PageBody
	}
	return ""
}

func (x *Result) GetScreenshots() []string {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

func (x *Result) GetScreenshotsId() []int32 {
	if x != nil {
		return x.ScreenshotsId
	}
	return nil
}

func (x *Result) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *Result) GetScriptsId() []int32 {
	if x != nil {
		return x.ScriptsId
	}
	return nil
}

func (x *Result) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Result) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Result) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId          string        `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Browser           *Task_Browser `protobuf:"bytes,2,opt,name=browser,proto3" json:"browser,omitempty"`
	Urls              []string      `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
	Cookies           []string      `protobuf:"bytes,4,rep,name=cookies,proto3" json:"cookies,omitempty"`
	Screenshots       []string      `protobuf:"bytes,5,rep,name=screenshots,proto3" json:"screenshots,omitempty"`
	Scripts           []string      `protobuf:"bytes,6,rep,name=scripts,proto3" json:"scripts,omitempty"`
	ChunkSize         int64         `protobuf:"varint,7,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	CpuLoad           int32         `protobuf:"varint,8,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	MemFree           int64         `protobuf:"varint,9,opt,name=mem_free,json=memFree,proto3" json:"mem_free,omitempty"`
	Timeout           int32         `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ScreenshotTimeout int32         `protobuf:"varint,11,opt,name=screenshot_timeout,json=screenshotTimeout,proto3" json:"screenshot_timeout,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{4}
}

func (x *Task) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Task) GetBrowser() *Task_Browser {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *Task) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Task) GetCookies() []string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *Task) GetScreenshots() []string {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

func (x *Task) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *Task) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *Task) GetCpuLoad() int32 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *Task) GetMemFree() int64 {
	if x != nil {
		return x.MemFree
	}
	return 0
}

func (x *Task) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Task) GetScreenshotTimeout() int32 {
	if x != nil {
		return x.ScreenshotTimeout
	}
	return 0
}

type Task_Browser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Argument      []string `protobuf:"bytes,2,rep,name=argument,proto3" json:"argument,omitempty"`
	Extension     []string `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
	Geometry      string   `protobuf:"bytes,4,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Instance      int32    `protobuf:"varint,5,opt,name=instance,proto3" json:"instance,omitempty"`
	InstanceTab   int32    `protobuf:"varint,6,opt,name=instance_tab,json=instanceTab,proto3" json:"instance_tab,omitempty"`
	PageSize      int64    `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageTimeout   int32    `protobuf:"varint,8,opt,name=page_timeout,json=pageTimeout,proto3" json:"page_timeout,omitempty"`
	ScriptTimeout int32    `protobuf:"varint,9,opt,name=script_timeout,json=scriptTimeout,proto3" json:"script_timeout,omitempty"`
	Proxy         string   `protobuf:"bytes,10,opt,name=proxy,proto3" json:"proxy,omitempty"`
}

func (x *Task_Browser) Reset() {
	*x = Task_Browser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webchela_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Browser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Browser) ProtoMessage() {}

func (x *Task_Browser) ProtoReflect() protoreflect.Message {
	mi := &file_webchela_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Browser.ProtoReflect.Descriptor instead.
func (*Task_Browser) Descriptor() ([]byte, []int) {
	return file_webchela_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Task_Browser) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task_Browser) GetArgument() []string {
	if x != nil {
		return x.Argument
	}
	return nil
}

func (x *Task_Browser) GetExtension() []string {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Task_Browser) GetGeometry() string {
	if x != nil {
		return x.Geometry
	}
	return ""
}

func (x *Task_Browser) GetInstance() int32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *Task_Browser) GetInstanceTab() int32 {
	if x != nil {
		return x.InstanceTab
	}
	return 0
}

func (x *Task_Browser) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Task_Browser) GetPageTimeout() int32 {
	if x != nil {
		return x.PageTimeout
	}
	return 0
}

func (x *Task_Browser) GetScriptTimeout() int32 {
	if x != nil {
		return x.ScriptTimeout
	}
	return 0
}

func (x *Task_Browser) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

var File_webchela_proto protoreflect.FileDescriptor

var file_webchela_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x22, 0x2f, 0x0a, 0x05, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x46, 0x72,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xcb, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8f, 0x05, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4c, 0x6f,
	0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x46, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0xaf, 0x02, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x32, 0x66, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x0f, 0x2e,
	0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e,
	0x2e, 0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x77, 0x65,
	0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x0f, 0x2e, 0x77, 0x65,
	0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x77, 0x65, 0x62, 0x63, 0x68, 0x65, 0x6c, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webchela_proto_rawDescOnce sync.Once
	file_webchela_proto_rawDescData = file_webchela_proto_rawDesc
)

func file_webchela_proto_rawDescGZIP() []byte {
	file_webchela_proto_rawDescOnce.Do(func() {
		file_webchela_proto_rawDescData = protoimpl.X.CompressGZIP(file_webchela_proto_rawDescData)
	})
	return file_webchela_proto_rawDescData
}

var file_webchela_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_webchela_proto_goTypes = []interface{}{
	(*Chunk)(nil),        // 0: webchela.Chunk
	(*Empty)(nil),        // 1: webchela.Empty
	(*Load)(nil),         // 2: webchela.Load
	(*Result)(nil),       // 3: webchela.Result
	(*Task)(nil),         // 4: webchela.Task
	(*Task_Browser)(nil), // 5: webchela.Task.Browser
}
var file_webchela_proto_depIdxs = []int32{
	5, // 0: webchela.Task.browser:type_name -> webchela.Task.Browser
	1, // 1: webchela.Server.GetLoad:input_type -> webchela.Empty
	4, // 2: webchela.Server.RunTask:input_type -> webchela.Task
	2, // 3: webchela.Server.GetLoad:output_type -> webchela.Load
	0, // 4: webchela.Server.RunTask:output_type -> webchela.Chunk
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_webchela_proto_init() }
func file_webchela_proto_init() {
	if File_webchela_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webchela_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webchela_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webchela_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Load); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webchela_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webchela_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webchela_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Browser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webchela_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webchela_proto_goTypes,
		DependencyIndexes: file_webchela_proto_depIdxs,
		MessageInfos:      file_webchela_proto_msgTypes,
	}.Build()
	File_webchela_proto = out.File
	file_webchela_proto_rawDesc = nil
	file_webchela_proto_goTypes = nil
	file_webchela_proto_depIdxs = nil
}
